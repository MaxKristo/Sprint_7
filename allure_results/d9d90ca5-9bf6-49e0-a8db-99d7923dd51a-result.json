{"name": "Проверка авторизации существующего курьера - json не содержит обязательного поля- \"login\", \"password\"", "status": "failed", "statusDetails": {"message": "AssertionError: assert 504 == 400\n +  where 504 = <Response [504]>.status_code", "trace": "self = <test_courier.TestLoginCourier object at 0x000002AF93765E00>, random_courier = {'firstName': 'kdvcrqjcae', 'login': 'jfogpaikyi', 'password': '6220'}\nexclude_param = 'password'\n\n    @allure.title('Проверка авторизации существующего курьера - json не содержит обязательного поля- \"login\", \"password\"')\n    @allure.description(\n        'Отправляем запрос POST на ручку /api/v1/courier/login на авторизацию курьера без указания обязательного поля и проверяем код и тело ответа')\n    @allure.link(URL, name='Учебный сервис «Яндекс.Самокат»')\n    @pytest.mark.parametrize(\"exclude_param\", [CourierService.EXCLUDE_PARAMETERS[\"login\"], CourierService.EXCLUDE_PARAMETERS[\"password\"]])\n    def test_login_courier_without_fields_not_authorized(self, random_courier, exclude_param):\n        Courier.register_courier(random_courier)\n        payload = Courier.excludes_parameter_from_courier_registration_data(random_courier, exclude=exclude_param)\n        response = Courier.login_courier(payload)\n>       assert response.status_code == TestMessages.COURIER_NOT_ENOUGH_AUTHORIZATION_WITHOUT_LOGIN_OR_PASSWORD[\"code\"]\nE       assert 504 == 400\nE        +  where 504 = <Response [504]>.status_code\n\ntests\\test_courier.py:69: AssertionError"}, "description": "Отправляем запрос POST на ручку /api/v1/courier/login на авторизацию курьера без указания обязательного поля и проверяем код и тело ответа", "steps": [{"name": "Регистрация курьера", "status": "passed", "parameters": [{"name": "courier", "value": "{'login': 'jfogpaikyi', 'password': '6220', 'firstName': 'kdvcrqjcae'}"}], "start": 1750027218521, "stop": 1750027218623}, {"name": "Исключить заданную пару ключ-значение", "status": "passed", "parameters": [{"name": "register_courier", "value": "{'login': 'jfogpaikyi', 'password': '6220', 'firstName': 'kdvcrqjcae'}"}, {"name": "exclude", "value": "'password'"}], "start": 1750027218624, "stop": 1750027218624}, {"name": "Авторизация курьера", "status": "passed", "parameters": [{"name": "registered_courier", "value": "{'login': 'jfogpaikyi', 'firstName': 'kdvcrqjcae'}"}], "start": 1750027218624, "stop": 1750027278715}], "parameters": [{"name": "exclude_param", "value": "'password'"}], "start": 1750027218521, "stop": 1750027278716, "uuid": "5592c591-25ae-4714-9304-82a98d6ea10b", "historyId": "d5f93d958a21ae59b5772725d802a820", "testCaseId": "058bdb63a752b06ac42c0dcd39737f6a", "fullName": "tests.test_courier.TestLoginCourier#test_login_courier_without_fields_not_authorized", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_courier"}, {"name": "subSuite", "value": "TestLoginCourier"}, {"name": "host", "value": "AsusFamily"}, {"name": "thread", "value": "18844-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_courier"}], "links": [{"type": "link", "url": "https://qa-scooter.praktikum-services.ru/", "name": "Учебный сервис «Яндекс.Самокат»"}]}